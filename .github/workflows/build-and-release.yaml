name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # 在创建标签时触发，类似 v1.0.0
  release:
    types: [created, edited]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: [1.21.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: false
          check-latest: true
          go-version: ${{ matrix.go }}
      - run: go version

      # - name: Setup Environment
      #   run: |
      #     echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
      #     echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      # - name: Module Cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/go-build
      #       ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('go.mod') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-${{ hashFiles('go.mod') }}
      #       ${{ runner.os }}-go-

      - name: Build
        run: |
          go mod tidy
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/cronsvc_${{ matrix.goos }}_${{ matrix.goarch }} ./cmd/cronsvc

      - name: Compress artifact using tar
        run: tar -czvf dist/cronsvc_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz -C dist cronsvc_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cronsvc_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz
          path: dist/cronsvc_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: "."
          pattern: cronsvc_*
          merge-multiple: true

      - name: List files in dist
        run: ls -R .

      # - name: Create Github Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref_name }}
      #     release_name: Release ${{ github.ref_name }}
      #     draft: false
      #     prerelease: false

      - name: Release Assets With GH
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: "🎉Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: "./*"

      # - name: Upload Release Assets
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: dist/
      #     asset_name: cronsvc_${{ matrix.goos }}_${{ matrix.goarch }}
      #     asset_content_type: application/octet-stream
